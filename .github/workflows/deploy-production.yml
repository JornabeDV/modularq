name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Permite deploy manual desde main

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production # Requiere aprobaci√≥n manual
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run comprehensive tests
        run: |
          pnpm test
          pnpm test:e2e
          pnpm type-check
          pnpm lint

      - name: Build for production
        run: pnpm build:production
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PROD_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PROD_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.PROD_SUPABASE_SERVICE_ROLE_KEY }}

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env NODE_ENV=production'
          working-directory: ./

      - name: Run production health check
        run: |
          echo "üîç Running health check on production..."
          sleep 30 # Esperar a que el deploy se complete
          # curl -f ${{ secrets.PROD_URL }}/api/health || exit 1

      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            üöÄ Production deployment successful!
            
            **Changes in this release:**
            - Deployed from commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build: ${{ github.run_number }}
            
            **Environment:**
            - Production URL: ${{ secrets.PROD_URL }}
            - Node.js: ${{ env.NODE_VERSION }}
            - Build time: ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful!"
          echo "üåê Production URL: ${{ secrets.PROD_URL }}"
          echo "üì¶ Release: v${{ github.run_number }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          echo "üö® This is a critical issue that needs immediate attention!"
          echo "Please check the logs and rollback if necessary."
